# nolocal和global类似，只不过nolocal针对的是上一级作用域

# 深浅拷贝说的一般都是可变类型，(不可变类型在进行拷贝时都是无意义的，内部都不会去拷贝)
import copy

# 浅拷贝    copy.copy(x)  浅拷贝只会拷贝第一层，而内部的不可变以及可变类型都不会被拷贝
v1 = [[11, 22], 33]
v2 = copy.copy(v1)
print(id(v1), id(v2))  # id 不一样，说明浅拷贝会将内存地址重新创建一份  拷贝的列表，而不是里面的数据
print(id(v1[0]), id(v2[0]))

# 深拷贝 对于可变类型，不论几层都会被拷贝，不可变类型不会被拷贝
v3 = [[11, 22], 22, 33]
v4 = copy.deepcopy(v3)
print(id(v3), id(v4))  # id不一样
print(id(v3[0]), id(v4[0]))  # 而且列表里面的可变类型id也会改变
print(id(v3[2]), id(v4[2]))  # 但是不可变类型依然不变

# 特殊的元组  浅拷贝永远不会被拷贝
# 如果内部都是不可变类型，永远不会被拷贝
# 如果内部有可变类型，元组也会被重新拷贝一份
t1 = (11, 22, [11, 33])
t2 = copy.deepcopy(t1)
print(id(t1), id(t2))
